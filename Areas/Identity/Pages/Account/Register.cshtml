@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
    IdentityResult result = ViewData["Result"] as IdentityResult;
}

<div class="container my-5">
    <h5 class="display-6">@ViewData["Title"]</h5>
    @if (result != null && !result.Succeeded)
    {
        <div class="alert-message alert-message-danger align-self-center">
            <h4>
                Error
            </h4>

            @foreach (var err in result.Errors)
            {
                <p>@err.Description</p>
            }


        </div>
    }
    <div class="row">
        <div class="col-md-4">
            <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
                <h4>Create a new account.</h4>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Input.Email"></label>
                    <input asp-for="Input.Email" class="form-control" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Username"></label>
                    <input asp-for="Input.Username" class="form-control" />
                    <span asp-validation-for="Input.Username" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Password"></label>
                    <input asp-for="Input.Password" class="form-control" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Input.ConfirmPassword"></label>
                    <input asp-for="Input.ConfirmPassword" class="form-control" />
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>
                <button type="submit" class="btn btn-rub-blue my-2">Register</button>
            </form>
            @* <span class="text-muted my-4 small">The password must be at least 8 characters long and requires one upper-case letter, one lower-case letter, one number, and one special character.</span>*@
        </div>
        @*<div class="col-md-6 col-md-offset-2">
                <section>
                    <h4>Use another service to register.</h4>
                    <hr />
                    @{
                        if ((Model.ExternalLogins?.Count ?? 0) == 0)
                        {
                            <div>
                                <p>
                                    There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                                    for details on setting up this ASP.NET application to support logging in via external services.
                                </p>
                            </div>
                        }
                        else
                        {
                            <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                                <div>
                                    <p>
                                        @foreach (var provider in Model.ExternalLogins)
                                        {
                                            <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                        }
                                    </p>
                                </div>
                            </form>
                        }
                    }
                </section>
            </div>*@
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
