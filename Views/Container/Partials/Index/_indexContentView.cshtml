@using IcddWebApp.Services.Models.Enums
@using System.Linq;
@using IIB.ICDD.Model.Container
@using IIB.ICDD.Model.Container.ExtendedDocument
@model IcddWebApp.PageModels.Container.ContainerPageModel

@{var count7x = Model.Container.ContainerDescription.ContainsParty.Count; }
@{ var personCount = 0; var organisationCount = 0; var partyType = ""; }
@foreach (var pieparty in Model.Container.ContainerDescription.ContainsParty)
{
    Console.WriteLine(pieparty.GetType().Name);
    if (pieparty.GetType().Name == "CtOrganisation")
        organisationCount++;
    else if (pieparty.GetType().Name == "CtPerson")
        personCount++;
}
@{ var isArchived = Model.ContainerMetadata.Status == ContainerStatus.ARCHIVED ? "disabled" : ""; }

@{var count1x = Model.Container.ContainerDescription.ContainsDocument.Count; }
@{var docTypeDictionary = new Dictionary<string, int>();}
@foreach (var doc in Model.Container.ContainerDescription.ContainsDocument.ToList().FindAll(X => !X.IsSameOrSubclass(typeof(ExtPayloadProxy))))
{
    if (docTypeDictionary.ContainsKey(doc.FileType))
    {
        docTypeDictionary[doc.FileType] = docTypeDictionary[doc.FileType] + 1;
    }
    else
    {
        docTypeDictionary.TryAdd(doc.FileType, 1);
    }
}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script>
    $(function () {
        // Load google charts
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        // Draw the chart and set the chart values
        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ['Filetype', 'Count'],
                @foreach (var filetype in docTypeDictionary)
                {
                    if (docTypeDictionary.ToList().Last().Equals(filetype)) {
                    @Html.Raw("['" + filetype.Key + "', " + filetype.Value + "]")
                    }
                    else
                    {
                       @Html.Raw("['" + filetype.Key + "', " + filetype.Value + "],")
                    }
                }
            ]);
            var options = {
                backgroundColor: "transparent", legend: "none", colors: ['#003f5c',
                    '#009275',
                    '#007e7f',
                    '#00a460',
                    '#00697e',
                    '#50b544',
                    '#005472',
                    '#94c11c'], pieHole: 0.25, height: 130, pieSliceText: 'label'};
            options.chartArea = { 'width': '80%', 'height': '80%' }

            // Display the chart inside the <div> element with id="piechart"
            var chart = new google.visualization.PieChart(document.getElementById('filePie'));
            chart.draw(data, options);
        }
    });

</script>

<script>
    $(function () {
        console.log(@partyType);
        // Load google charts
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        // Draw the chart and set the chart values
        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ['Filetype', 'Count'],
                ['Orga.', @organisationCount],
                ['Person', @personCount]
            ]);
            var options = { backgroundColor: "transparent", legend: "none", colors: ['#003f5c',
                '#009275', '#94c11c',
                '#007e7f',
                '#00a460',
                '#00697e',
                '#50b544',
                '#005472'], height: 130, pieSliceText: 'label'
            };
            options.chartArea = { 'width': '80%', 'height': '80%' }

            // Display the chart inside the <div> element with id="piechart"
            var chart = new google.visualization.PieChart(document.getElementById('partyPie'));
            chart.draw(data, options);
        }
    });
</script>

<div>
    <div class="row px-3 mb-4">
        <div class="col-12 col-lg-6 mb-4 mb-lg-0">
            <div class="card rounded-0 bg-light shadow  h-100">
                <div class="card-header">
                    <b>Container name</b>
                </div>
                <div class="card-body">
                    @Model.ContainerMetadata?.Name
                </div>

            </div>
        </div>
        <div class="col-6 col-lg-3  mb-4 mb-lg-0">
            <div class="card rounded-0 bg-light shadow  h-100">
                <div class="card-header">
                    <b>Creator</b>
                </div>
                <div class="card-body d-flex">
                    <div class="align-self-center w-100">
                        @Model.Container.ContainerDescription?.Creator?.Name
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6 col-lg-3  mb-4 mb-lg-0">
            <div class="card rounded-0 bg-light shadow  h-100">
                <div class="card-header">
                    <b>Status</b>
                </div>
                <div class="card-body d-flex">
                    <div class="align-self-baseline w-100">
                        @{
                            if (Model.ContainerMetadata?.Status == ContainerStatus.PUBLISHED)
                            {
                                <span class="badge" style="background-color: #5CB85C">PUBLISHED</span>
                            }
                            else if (Model.ContainerMetadata?.Status == ContainerStatus.ARCHIVED)
                            {
                                <span class="badge" style="background-color: #777777">ARCHIVED</span>
                            }
                            else if (Model.ContainerMetadata?.Status == ContainerStatus.SHARED)
                            {
                                <span class="badge" style="background-color: #5BC0DE">SHARED</span>
                            }
                            else if (Model.ContainerMetadata?.Status == ContainerStatus.WORK_IN_PROGRESS)
                            {
                                <span class="badge" style="background-color: #F0AD4E">WORK IN PROGRESS</span>
                            }
                        }
                    </div>
                </div>
               
            </div>
        </div>
    </div>
  

    @{var count2x = Model.Container.ContainerDescription.ContainsLinkset.Count; }
    @{var count5x = Model.Container.UserDefinedOntologies.Count; }
    @{var countPayload = Model.Container.PayloadTriples.Count; }

    <div class="row px-3  mb-4">
        <div class="col-6 col-lg-3  mb-4 mb-lg-0">
            <div class="card rounded-0 bg-light shadow text-center h-100">

                <div class="card-body">
                    <div id="filePie"></div>
                </div>
                <div class="card-footer">
                    <b>Documents</b>
                </div>
            </div>
        </div>
        <div class="col-6 col-lg-3  mb-4 mb-lg-0">
            <div class="card rounded-0 bg-light shadow text-center  h-100">


                <div class="card-body d-flex">
                    <div class="align-self-center text-center w-100">
                        <h3><span class="oi oi-link-intact text-rub-blue"></span></h3>
                        <h1>@count2x</h1>
                    </div>
                </div>
                <div class="card-footer">
                    <b>Linksets</b>
                </div>
            </div>
        </div>
        <div class="col-6 col-lg-3  mb-4 mb-lg-0">
            <div class="card rounded-0 bg-light shadow text-center  h-100">
                <div class="card-body d-flex">
                    <div class="align-self-center text-center w-100">
                        <h3><span class="oi oi-puzzle-piece text-rub-blue"></span></h3>
                        <h1>@count5x</h1>
                    </div>
                </div>
                <div class="card-footer">
                    <b>Ontologies</b>
                </div>
            </div>
        </div>
        <div class="col-6 col-lg-3  mb-4 mb-lg-0">
            <div class="card rounded-0 bg-light shadow text-center  h-100">
                <div class="card-body d-flex">
                    <div class="align-self-center text-center w-100">
                        <h3><span class="oi oi-pulse text-rub-blue"></span></h3>
                        <h1>@countPayload</h1>
                    </div>
                </div>
                <div class="card-footer">
                    <b>Payload Triples</b>
                </div>
            </div>
        </div>
    </div>
<div class="row px-3  mb-4 ">
        <div class="col-12 col-lg-3  mb-4 mb-lg-0">
            <div class="card rounded-0 bg-light shadow text-center h-100">

                <div class="card-body">
                    <div id="partyPie"></div>
                </div>
                <div class="card-footer">
                    <b>Actors</b>
                </div>
            </div>
        </div>
        <div class="col-12 col-lg-9  mb-4 mb-lg-0">
            <div class="card rounded-0 bg-light shadow  h-100">


                <div class="card-body d-flex">
                    <div class="align-self-baseline w-100">
                        <table width="100%" class="table text-dark">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Type</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (CtParty party in Model.Container.ContainerDescription.ContainsParty)
                                {
                                    <tr>
                                        <td>@party.Name</td>
                                        <td>
                                            @if (party.GetType().Name.Replace("Ct", "") == "Person")
                                            {
                                                <span class="oi oi-person"></span>
                                            }
                                            else
                                            {
                                                <span class="oi oi-home"></span>
                                            }
                                            @party.GetType().Name.Replace("Ct", "")
                                        </td>
                                        <td>@party.Description</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="row px-3">
        <div class="col-12">
            <div class="card rounded-0 bg-light shadow  h-100">
                <div class="card-header">
                    <span class="fw-bold">History</span>
                </div>
                <div class="card-body d-flex p-0">
                    <div class="align-self-baseline w-100" style="max-height: 100px; overflow-y: scroll; overflow-x: hidden">

                        @foreach (var entry in Model.Container.Repository.Log)
                        {
                            <div class="row w-100 m-1">
                                <div class="col-auto small">
                                    [@entry.Committer.When.ToString("yyyy-MM-dd hh:mm:ss")]
                                </div>
                                <div class="col-auto">
                                    <span class="small"> @entry.Committer.Name</span>
                                </div>
                                <div class="col-7 text-truncate">
                                    <span class="small"> @entry.Message</span>
                                </div>
                                <div class="col-auto ms-auto">
                                </div>
                            </div>

                        }
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>